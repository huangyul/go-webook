// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/huangyul/go-webook/interactive/events"
	"github.com/huangyul/go-webook/interactive/grpc"
	"github.com/huangyul/go-webook/interactive/ioc"
	"github.com/huangyul/go-webook/interactive/repository"
	"github.com/huangyul/go-webook/interactive/repository/cache"
	"github.com/huangyul/go-webook/interactive/repository/dao"
	"github.com/huangyul/go-webook/interactive/service"
)

// Injectors from wire.go:

func InitApp() *App {
	db := ioc.InitDB()
	interactiveDAO := dao.NewInteractiveDAO(db)
	cmdable := ioc.InitRedis()
	interactiveCache := cache.NewInteractiveCache(cmdable)
	interactiveRepository := repository.NewInteractiveRepository(interactiveDAO, interactiveCache)
	interactiveService := service.NewInteractiveService(interactiveRepository)
	grpcInteractiveService := grpc.NewInteractiveService(interactiveService)
	client := ioc.InitEtcd()
	server := ioc.InitGrpcServer(grpcInteractiveService, client)
	saramaClient := ioc.InitSaramaClient()
	articleReadConsumer := events.NewArticleReadConsumer(saramaClient, interactiveRepository)
	v := ioc.InitConsumers(articleReadConsumer)
	app := &App{
		server:    server,
		consumers: v,
	}
	return app
}
